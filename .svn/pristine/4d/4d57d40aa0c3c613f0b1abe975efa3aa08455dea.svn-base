import React, { Component } from 'react';
import { Document, Page } from 'react-pdf';
import PdfData from './PdfData';
import { pdfjs } from 'react-pdf';

class PdfDisplay extends Component {
    constructor(props) {
        super(props);
        this.state = {
            file: null,
            numPages: 0,
            pageNumber: 1,
           
          }

    }
 
    
    
      onFileChange = (event) => {
        this.setState({
          file: event.target.files[0]
        });
      }
    
      onDocumentLoadSuccess = ({ numPages }) => {
        this.setState({ numPages });
      }
    
      nextPage = () => {
    
        const currentPageNumber = this.state.pageNumber;
        let nextPageNumber;
    
        if (currentPageNumber + 1 > this.state.numPages) {
          nextPageNumber = 1;
        } else {
          nextPageNumber = currentPageNumber + 1;
        }
    
        this.setState({
          pageNumber: nextPageNumber
        });
      }

    render() {
        const { pageNumber, numPages } = this.state;
        
        const divStyle = {
            position: 'absolute',
            overflow: 'auto',
            width: '100%',
            height: '100%'
          };
      const items = []
      
      for (var j = 1; j <= numPages; j++) {
        items.push(j );
      }
        return (

           <div>
            <div style={divStyle}>
            <Document file={"data:application/pdf;base64,"+PdfData[1]} onLoadSuccess={this.onDocumentLoadSuccess} >
              {items.map(page => (
                <Page pageNumber={page} />
              ))}

            </Document>
            
            {this.state.file ? <p>Page {pageNumber} of {numPages}</p> : null}
           </div>
        
           </div>
        );
    }
}

pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;
export default PdfDisplay;